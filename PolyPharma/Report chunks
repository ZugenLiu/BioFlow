The GO implementation uses four databases as input: 

First, the UNIPROT file, from which the GO annotations are retrieved for the targets used in the computational prediction of off-target effect of the specific drugs. Provided the coverage of UNIPROT and quantity of mappings it contains towards other databases, in case of need it can also be used to map the GO annotations from the other databases, such as KEGG, Reactome.org, etc... However, frequently the names of the protein models from structural computational biology that are used to compute the interaction between the targets and the drug will differ from the canonical names of the proteins in UNIPROT. In this case, a manual mapping of the model names to the UNIPROT protein is required. A script have been written to partially automate this task and can be found in the Utils.Dictionary_comparator.py module of the PolyPharma project within the GitHub repositry [available at the adress specified in the Annex II: Code outline]

Second, the Gene Ontology OBO file. This file provides the mapping relationships between the GO terms. The relationships that we are interested in are "is_a", indicating being a more precise instance of an another GO term, "regulates" (plus the two more precise variants) and finally "is_part_of". These relations are used to calculate the "expanded" set of the GO annotation for each protein. In fact, the Uniprot contains the most precise terms annotating the GO. However more general and less informative terms can be derived from the more precise terms. For instance, if a protein is annotated as critical to the B-Cell apoptosis, we will be able to infer that it also contributes to the immune response, programmed cell death, antibody secretion and B-cell population control, even if none of these GO terms are directly assigned to the protein.

Third, drug - targets interaction predictions, provided by the structural biology computational methods. In case of the DrugDesignTech, they were derived by the propertary methods based on the small molecule fragments analysis. In case of Bourne lab, they were retrieved by a successive application of a pre-filter that selects the proteins on which the molecule is most likely to act, followed by a molecular dynamic simulation [Mobleya], see [Xie (on nelfanavir)] for an example of a full-length pipeline. During the UCSD implementation, the ehits file for the simulated off-target action of different drugs was downloaded from the funsite.sdsc.edu.

Finally, a relation between the Drugs and secondary effect is required. In our case, this information was downloaded from the SIDER Side effects ressource by EMBL [citation here]. Once again, drug names differed from those used in the drug-target interaction prediction and had to be pre-treated with the Utils.Dictionary_comparator.py script and then completed manually.

Optionally, an organ-specific protein concentration on order to make the predictions organ-specific. This integration was made during the DrugDesignTech Internship, but unfortunately did not provide any major enhancement and thus was dropped in the UCSD implementation.

Uniprot and GO databases are processed by the DBLoader package, more specifically the DBLoader.GO_Parser.py and DBLoader.UNIPROT_PARSER.py. The information regarding the drug-protein interaction and the secondary effects a drug wil posess is processed in the TargetPreProcessing package, more specifically by the TargetPreProcessing.funsiteTBParser.py and TargetsPreProcessing.HumanTargets_proc.py. The manipulation of the classes contained in each of those modules is done fromt the TestFiled.py script within each package. AFter each file is parsed, all the relevant information is stored on a local SQLite database. The DDL statements used to create and index all the relevant tables within the SQLite database are issued via the SQLAlchemy module and are referenced in the DBLoader.TableBuilder.py module.

Once the initial files have been parsed, we perform the extension of the GO annotation of the potential targets. The main goal of the this procedure is to accelerate the computation of the information circulation between the target that would be based on the GO annotation similarity. In fact, since the GO is a completely connex set, any two targets that are annotated in with GO terms can be linked with a path in the GO terms graph, passing through the "is_a", "part_of" and "regulates" edges. In addition to it, the more general is the GO term is, the more penalising should be the transition through it. However, in order to effeciently compute the informativity flow between the GO terms, it is necessary to either perform a graph traversal to find out all the possible paths between two sets of GO terms, or to build and keep in memory the connection matrix for all the GO terms.

Unfortunately, the graph traversals are computationally expensive, just as information circulation within the graph. Proved the almost tree-like structure of GO terms graph, there is a more simple and efficient way to compute the information circulation between targets and the most important GO terms for a set of GO targets. In fact, we can retrieve once and for all all the GO terms that can be reached starting from a particular GO term and following only the "is_a", "part_of" edges and a limited nunmber of "regulates" edges. In fact, the limitation on the number of the transitions on the "regulates" edges allows to avoid loops (pretty much like the TTL for the packages in the TCP/IP routing protocol). In addition, previous research have shown that the effect of regulation relations wears off after a certain number of transitions (3, according to [Wintermude2010]). Once such a retrieval is performed, and the expanded annotations are retrieved for all the GO terms and ported onto targets, to compute the information circulation between two Targets, it is sufficient to retrieve all the GO terms that are common between the expanded GO sets of the two proteins and to compute the current passing through each of the GO terms [See figure 7, right part]

Provided that the GO terms are not equivalent in their precision of description of biological processes, we need to define a measure of informativity of GO terms. Without it, the most general and most commonly encountered terms, such as "biological_process" will be treated in exactly the same fashion as more rare and more precise terms, such as "platelet adhesion regulation". Since they will always be present in the expanded set of GOs of all the proteins, they will be the most common terms for the set of targest and will completely supress any signal coming from more meaningful, but less common terms, such as "immune system" or "regulation of blood pressure".

The most natural way to indroduce the informativity is in terms of the information theory. According to the information theory, the informativity defined by a chunk of information is equal to the decrease in the entropy of possible states of the system this chunk of information we are dealing with. In fact, if we know nothing about a system, all the states of the system are equiprobable and the entropy of the system is maximal. However, a chunk of information about the system will make some of the states less probable or completely impossible and thus will decrease the entropy of the system. If the chunk of information contains all the relevant information about the system, the state of the system will become completely defined and the it's entropy will become equal to zero and thus the informativity of this chunk of information will be maximal (infinite). In our case, we can see the potential targets as the state of the system and the GO terms, as the chunks of information about this system thus, the informativity of a given GO term can be naturally defined as follows.

where N_Total is the number of targets present in the 

Finally, some of the targets were not studied enough to be sufficiently annotated. Since protein interaction and effect network has the same properties as social graphs, i.e. are small-world networks with power-law distribution, we can estimate if the proteins were sufficiently studied by investigating the overall informativity of their annotation. As long as Zimpf law is followed, we can safely consider that the proteins were sufficiently studied. If we compute the cummulative informativity of expanded GO annotation, we can see that within the human metabolome, from the 18292 human proteins posessing a GO annotation [Graph here], only 8000 follow approimatively a Zimpf distribution and can thus be used for the actual information circulation computation. A more detailed table for 50 proteins with the highest GO annotation informativity in humans can be found in the Annex III.

# add the information circulation computation algorithm
# add most common information circulation computation
# Add a Targets partitionning into sets.
# add note about the necessity of informativity correction to account for the correlation between the presence of a less genreal and a more general term.

The choice of the Gene Ontology as the backbone for our applicatione meant that we would be unable to treat the Cytochrome C - associated drug toxicity, provided that a precise knowledge of drug metabolism process would be required ot predict a possible interaction with a specific member of Cytochrome C family memeber and a cytotoicity due to the interaction with this specific CYP. Provided that cytochrome C - related pathways of cytotoxycity were already well studied and tools have been developped to analyse them, we've decided to ignore CYT C - related secondary effects alltogehter.

In the same fashion, Gene Ontology is rather badly suited for the evaluation of secondary effects occuring in the central nervous system or due to the regulation of gene transcription/translation. In fact, provided that a large number of closely related targets with a highly similar annotation could be affected (such as dopamine receptors for instance), it will be hard to retrieve the targets that are contributing to a specific secondary effect because of the noize coming from all the functional similarities between those targets. In the same fashion, the GO lack the indication of specific regions or genes regulated by transcription factors.

