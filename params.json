{"name":"Polypharma","tagline":"A simple toolbox to explore interaction networks - not only in biology","body":"\r\n|License Type| |Build Status| |Coverage Status| |Branch status| |Code\r\nIssues| |Duplicate Lines|\r\n\r\nBioFlow Project\r\n===============\r\n\r\nInformation Flow Analysis in biological networks\r\n\r\nBranch v.0.03 - Unstable\r\n\r\nDescription:\r\n------------\r\n\r\nThis code is currently under development/\r\n\r\nThis project's goal is to predict systemic effect of multiple gene\r\nperturbation, wherther trigered by a drug or by a disease (such as\r\ncancer or disease with complex genetic background). It's main intended\r\nuses are prediction of drug toxicity of de-novo drugs due to a\r\ndistributed off-target effect and linkage between a phenotype and a\r\ncomplex genotype.\r\n\r\nIt's main advantage is integration of quantitative computational\r\npredictions with prior biological knowledge and ability to integrate\r\nsuch diverse source of knowledge as databases, simulation, publication\r\ndata (currently in dev) and expert knowledge.\r\n\r\nThis application is provided as-is, without any warranties or support.\r\nUse it at your onw risk.\r\n\r\nHowever, if you are willing to test it and encounter problems or are\r\nwilling to provide feedback, please fill in an issue ticket on GitHub\r\nand I will be glad to assist you in the measure of my possibilities.\r\n\r\nThe license is BSD, but in case of academic usage, please cite the *url*\r\n(publication is in preparation). The full documentation is available at\r\n`readthedocs.org <http://bioflow.readthedocs.org/RTFD>`__ or on `github\r\npages <http://>`__\r\n\r\nInstallation:\r\n-------------\r\n\r\nBefore you start using the project, you will need to install several\r\ndependencies on which the project relies in order to function properly.\r\n\r\nCurrently, only deployment on Linux Debian/RHCP/CentOS/Fedora is\r\nsupported because of dependencies on scientific computation packages\r\n\r\n**System-level packages:**\r\n\r\n-  Python 2.7.x (x86\\_64 )\r\n-  Java JDK 1.6/1.7\r\n-  Neo4j 1.xx You can download it from `the official Neo4j\r\n   website <http://neo4j.com/download/other-releases/>`__. Note: if you\r\n   want to install a 2.xx series you will also need a `gremlin parser\r\n   engine <https://github.com/neo4j-contrib/gremlin-plugin>`__. In case\r\n   your neo4j version fails to with a 'java heap exception', please\r\n   considers installing a `frozen 1.9.6 community neo4j\r\n   version <https://github.com/chiffa/neo4j-community-1.9.6>`__\r\n-  MongoDB (`installation instructions\r\n   here <https://docs.mongodb.org/manual/administration/install-on-linux/>`__)\r\n-  LAPACK, ATLAS, BLAS (only if you are installing Scipy manually)\r\n-  suitesparese & suitesparse-dev (needed for scikits.sparse\r\n   compilation. if you are installing a wheel of scikits.sparse, you\r\n   don't need them)\r\n\r\nThis last step is best done via package manager:\r\n\r\nOn *Debian*: ``$ sudo apt-get install suitesparse suitesparse-dev``\r\n\r\nOn *Fedora* / *RHCP* / *CentOS*:\r\n``$ sudo yum install suitesparse suitesparse_devel``\r\n\r\n**Packages installed via Pip:**\r\n\r\nAll the Python packages are better off stored in a, so they don't\r\ninterfere with other versions of Python present on the machine. For a\r\nmore simple installation, you can install `Anaconda Python\r\nDistribution <https://www.continuum.io/downloads>`__, which will install\r\nthe following packages:\r\n\r\n-  Cython\r\n-  NumPy (latest x86\\_64)\r\n-  SciPy (latest x86\\_64)\r\n-  matplotlib\r\n-  Sphinx (documentation build)\r\n\r\nAfter which, you can ``pip install`` the remaining packages\r\n\r\n-  bulbs\r\n-  python-Levenshtein\r\n-  pymongo\r\n-  requests\r\n-  scikits.sparse\r\n-  click\r\n\r\nFinally, I would recommend using\r\n`Gephi <http://gephi.github.io/users/download/>`__ to analyse the output\r\n.gdf graphs. It is very easy to use, well-supported and possess a large\r\nlibrary of plug-ins.\r\n\r\nDatasets used as backbone:\r\n--------------------------\r\n\r\n-  OBO 1.2 file of GO terms and relations, available at:\r\n   http://www.geneontology.org/GO.downloads.ontology.shtml\r\n-  UNIUPROT-SWISSPROT .txt text database file available at:\r\n   http://www.uniprot.org/downloads\r\n-  Reactome.org \"Events in the BioPax level 3\" file, available at:\r\n   http://www.reactome.org/download/index.html\r\n-  HiNT binary interaction files for the organisms of interest, availble\r\n   at: http://hint.yulab.org/batch.html\r\n-  BioGRID ALL\\_ORGANISMS file in the tab2 format, available at\r\n   http://thebiogrid.org/download.php\r\n-  Gene-chromosome mapping files from the Uniprot documentation:\r\n   ftp://ftp.uniprot.org/pub/databases/uniprot/current\\_release/knowledgebase/complete/docs/\r\n   (needed only for working on aneuploidy)\r\n-  Organism-specific protein aboundance files, available at:\r\n   http://pax-db.org/#!downloads\r\n\r\nYou have a choice of either donwloading and these databases and\r\ninstalling them manually with respect to\r\n\r\nBasic usage:\r\n------------\r\n\r\nStart up the neo4j database and the MonogoDB on their default ports. If\r\nthose ports are not available for some reason, please modify the\r\n``servers.ini`` file in the ``/PolyPharma/configs`` directory. If you\r\nare loading a particularly large dataset into neo4j, you might need to\r\nadjust the configurations with which neo4j is launched\r\n\r\nYou have a choice of using either Python binding of methods or a command\r\nline interface. If you installed this package with pip, your will be\r\nable to call the command line interfaces with\r\n\r\n::\r\n\r\n    > truegrid command args\r\n\r\nOtherwise, you can access them with\r\n\r\n::\r\n\r\n    > python CLUI.py command args\r\n\r\nwhen you are executing the command lines by using Python bindings, don't\r\nforget to add the ``-m`` argument between ``Python`` and the location of\r\nthe command you are issuing.\r\n\r\n::\r\n\r\n    > Python -m PolyPharma.module.command\r\n\r\nDownloading the datasets:\r\n~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n*Database creation*\r\n\r\nCreate the configuration files containing the data:\r\n\r\n::\r\n\r\n    > python CLUI.py initialize --path myfolder --neo4jserver http://localhost:7474 --mongoserver mongodb://localhost:27017/\r\n\r\n    > python -m PolyPharma.Utils.ConfigsIO.set_folders()\r\n\r\nDownload the databases:\r\n\r\n::\r\n\r\n    > python CLUI.py downloaddbs\r\n\r\n    > python -m PolyPharma.Utils.ConfigsIO.StructureGenerator.pull_online_DBs()\r\n\r\nFor now, the syustem will download all the required files, then fail\r\nwhen trying to download 'ABOUNDANCE' file class.\r\n\r\nCreate the proper configuration file for the desired organism\r\n\r\n::\r\n\r\n    > python CLUI.py setorgconfs --organism [mouse, human, yeast]\r\n\r\n    > python - m PolyPharma.Utils.ConfigsIO.build_source_config('yeast')\r\n\r\nAlternatively all of the above can be executed (for yeast),\r\n\r\n::\r\n\r\n    > python- m PolyPharma.Utils.ConfigsIO \r\n\r\nProvided that Uniprot.dat is a rather big file (~3 Gb as of late 2015),\r\nit might get broken on the download and you might want to check that it\r\nis a correct size\r\n\r\nBuilding the database:\r\n~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nIf you are using the application for the first time on your computer,\r\nyou will need to load all the data that is contained in the datastore\r\nfiles you've donwloaded previously and cross-reference them\r\n\r\n::\r\n\r\n    > Python -m PolyPharma.neo4j_Importers.Import_commander\r\n\r\n    > python CLUI.py loadneo4j\r\n\r\nAccessing low-level structure of the interactome:\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nExport the organism-specific interactome or concept-entity relationships\r\nas a Python-Scipy sparse matrix object:\r\n\r\n::\r\n\r\n    > python CLUI.py extractmatrix --interactome/--annotmap > path to a picke dump of the sparse matrix and name map\r\n\r\n    > python -m \r\n\r\nMap a list of heterogeneous identifiers to the database-specific ids:\r\n\r\n::\r\n\r\n    > python CLUI.py mapids /path/to/my.input.file.tsv > path/to/my.output.file\r\n\r\n    > python -m\r\n\r\nHigh-level analysis:\r\n~~~~~~~~~~~~~~~~~~~~\r\n\r\nIndicate the file to use in the ``PolyPharma/configs.py`` folder as the\r\nRNA\\_source variable Configure the expected counts groups and desired\r\nintergroup comparisons in the\r\n``PolyPharma/PreProcessing/RNA_counts_parser.py`` folder\r\n\r\n::\r\n\r\n    > Python -m PolyPharma.PreProcessing.RNA_counts_parser\r\n\r\nNow, call the auto-analyze routines for the annotation analysis or\r\ninteractome analysis:\r\n\r\n::\r\n\r\n    > Python -m PolyPharma.neo4j_analyzer.knowledge_access_analysis\r\n\r\n    > Python -m PolyPharma.neo4j_analyzer.interactome_analysis\r\n\r\nAnalyze a list of genes with an optional background:\r\n\r\n::\r\n\r\n    > python CLUI.py analyze --interactome/--annotmap --background /path/to/background.input.file --depth 20 --processors 2 path/to/hits.input.file\r\n\r\nThe resulting significance data can be seen as the output and the\r\nrelated analyzis .gdf files can be found in the /outputs folder.\r\n\r\nFull API documentation of underlying libraries is available at\r\n`readthedocs.org <http://polypharma.readthedocs.org/%20RTFD>`__\r\n\r\nFuture developments:\r\n--------------------\r\n\r\nPlease see the developper log below!\r\n\r\n.. |License Type| image:: https://img.shields.io/badge/license-BSD3-blue.svg\r\n   :target: https://github.com/chiffa/BioFlow/blob/master/License-new_BSD.txt\r\n.. |Build Status| image:: https://travis-ci.org/chiffa/BioFlow.svg?branch=master\r\n   :target: https://travis-ci.org/chiffa/BioFlow\r\n.. |Coverage Status| image:: https://coveralls.io/repos/chiffa/BioFlow/badge.svg?branch=master&service=github\r\n   :target: https://coveralls.io/github/chiffa/BioFlow?branch=master\r\n.. |Branch status| image:: https://img.shields.io/badge/branch_status-refactoring-red.svg\r\n   :target: https://github.com/chiffa/BioFlow/blob/master/README.md\r\n.. |Code Issues| image:: https://www.quantifiedcode.com/api/v1/project/1c3f8cd001a44319abddab249101b646/badge.svg\r\n   :target: https://www.quantifiedcode.com/app/project/1c3f8cd001a44319abddab249101b646\r\n.. |Duplicate Lines| image:: https://img.shields.io/badge/duplicate%20lines-17.66%25-yellow.svg\r\n   :target: http://clonedigger.sourceforge.net/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}